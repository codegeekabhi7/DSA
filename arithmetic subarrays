class Solution {
public:
    vector<bool> checkArithmeticSubarrays(vector<int>& nums, vector<int>& l, vector<int>& r) {
        int m = l.size();
        
        int k = 0;
        
        auto first = nums.begin();
        
        vector<bool> ans;
        
        while (k < m) {
            vector<int> temp(first + l[k], first + r[k] + 1);
            sort(temp.begin(), temp.end());
            
            bool unequal = false;
            
            int difference = temp[1] - temp[0];
            
            for (int i = 1; i < temp.size() - 1; i++) {
                if (temp[i + 1] - temp[i] != difference) {
                    ans.push_back(false);
                    unequal = true;
                    break;
                }
            }
            
            if (!unequal) { ans.push_back(true); }
            k += 1;
        }
        
        return ans;
    }
};

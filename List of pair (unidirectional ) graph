#include <iostream>
#include <list>
#include <unordered_map>
#include <queue>
using namespace std;

template <typename T>
class graph {
    unordered_map<T, list<pair<T, int>>> h;

public:
    void addedge(T u, T v, int dist, bool bidir = true) {
        h[u].push_back(make_pair(v, dist));
        if (bidir) {
            h[v].push_back(make_pair(u, dist));
        }
    }

    void printgraph() {
        for (auto x : h) {
            cout << x.first << "-->";
            for (auto p : x.second) {
                cout << "(" << p.first << ", " << p.second << ") ";
            }
            cout << endl;
        }
    }
};

int main() {
    graph<int> g;
    g.addedge(0, 1, 2);
    g.addedge(0, 4, 5);
    g.addedge(1, 4, 1);
    g.addedge(1, 4, 3);
    g.addedge(4, 3, 6);
    g.addedge(1, 3, 4);
    g.addedge(2, 3, 7);
    g.addedge(2, 3, 2);

    g.printgraph();

    return 0;
}
